name: Remove inactive Docker images
description: Remove Docker images inactive since at least 1 month

inputs:
  docker_org:
    description: "Docker registry (i.e. Docker Hub) organization"
    default: "jahia"
  docker_repository:
    description: "Docker registry (i.e. Docker Hub) repository"
    required: true
  docker_username:
    description: "Docker registry (i.e. Docker Hub) username"
    default: ""
    required: true
  docker_delete_token:
    description: "Docker registry (i.e. Docker Hub) token. Requires read/write/delete access"
    required: true
  dry_run:
    description: "Dry Run: Does not push changes if true"
    default: true

runs:
  using: "composite"
  steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_delete_token }}
    - name: Remove inactive images with DockerHub API
      shell: bash
      run: |
        TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "'${{ inputs.docker_username }}'", "password": "'${{ inputs.docker_delete_token }}'"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
        echo "Identifying and deleting images which are older than 1 months in ${{ inputs.docker_org }}/${{ inputs.docker_repository }}"
        echo
        COUNT=$(curl -s -H "Authorization: JWT ${TOKEN}" https://hub.docker.com/v2/namespaces/${{ inputs.docker_org }}/repositories/${{ inputs.docker_repository }}/images/?status=inactive&currently_tagged=false | jq '.count')
        echo "Number of inactive images: ${COUNT}"
        echo
        PAGES=$(( ${COUNT}/100 ))
        URL="https://hub.docker.com/v2/namespaces/${{ inputs.docker_org }}/repositories/${{ inputs.docker_repository }}/images/?status=inactive&currently_tagged=false&page_size=100"
        NEXT=""
        p=1
        while [[ ${p} -eq 1 || "${NEXT}" != "null" && "${NEXT}" != "" && ${p} -le ${PAGES} ]]; do
          echo "Current iteration: ${p} / ${PAGES}"
          IMAGES=$(curl -s -H "Authorization: JWT ${TOKEN}" ${URL} | jq '.results|.[]|.digest')
          for d in ${IMAGES}
          do
            echo
            echo "Current image being deleted: ${d}"
            curl -s -H "Authorization: JWT ${TOKEN}" -H "Content-Type: application/json" -X POST -d '{"dry_run": ${{ inputs.dry_run }}, "manifests": [{"repository": "'${{ inputs.docker_repository }}'", "digest": '${d}'}]}' https://hub.docker.com/v2/namespaces/${{ inputs.docker_org }}/delete-images
          done
          NEXT=$(curl -s -H "Authorization: JWT ${TOKEN}" ${URL} | jq '.next')
          p=$(( p+1 ))
        done
