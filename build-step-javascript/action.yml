name: build-step-javascript
description: Build step for Jahia Javascript module

inputs:
  github_artifact_name:
    description: 'Name of the artifacts on GitHub servers'
    required: false
    default: 'build-artifacts'
  github_artifact_retention:
    description: 'Time during which artifact are kept in Github infrastructure'
    default: '2'
  module_path:
    description: 'Path to the module folder (if not ./ precise path from the github_workspace)'
    required: false
    default: ./
  node_version:
    description: 'Version of node to install on the host'
    required: false
    default: 'lts/*'
  archive_artifacts:
    description: 'Should we archive built artifacts ?'
    default: 'true'
    required: false

runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node_version }}

    - name: Get package.json infos
      shell: bash
      run: |
        # Get informations from package.json to replace the ones that are in pom.xml in classic modules
        cd ${{ inputs.module_path }}
        MODULE_NAME=$(jq '.name' package.json | cut -d\" -f2 )
        MODULE_NAME="${MODULE_NAME//@}"
        MODULE_NAME="${MODULE_NAME////-}"
        echo "MODULE_NAME=$MODULE_NAME" >> $GITHUB_ENV
        MODULE_VERSION=$(jq '.version' package.json | cut -d\" -f2 )
        IS_SNAPSHOT=$(jq '.jahia.snapshot' package.json | cut -d\" -f2 )
        echo "IS_SNAPSHOT=$IS_SNAPSHOT" >> $GITHUB_ENV
        if [[ $IS_SNAPSHOT == true ]]; then
          echo "MODULE_OLD_VERSION=${MODULE_VERSION%%-SNAPSHOT}" >> $GITHUB_ENV
          echo "MODULE_VERSION=${MODULE_VERSION%%-SNAPSHOT}-SNAPSHOT" >> $GITHUB_ENV
          echo "MODULE_OLD_VERSION=${MODULE_OLD_VERSION}" 
          echo "MODULE_VERSION=${MODULE_VERSION}"
        elif [[ $IS_SNAPSHOT == false ]]; then
          echo "MODULE_VERSION=${MODULE_VERSION}" >> $GITHUB_ENV
        elif [[ $MODULE_VERSION == *-SNAPSHOT ]]; then
          echo "MODULE_VERSION=$MODULE_VERSION" >> $GITHUB_ENV
        else
          echo "MODULE_OLD_VERSION=$MODULE_VERSION" >> $GITHUB_ENV
          MODULE_VERSION+="-SNAPSHOT"
          echo $MODULE_VERSION
          echo "MODULE_VERSION=$MODULE_VERSION" >> $GITHUB_ENV
        fi
    
    - name: Prepare the module
      uses: borales/actions-yarn@v5
      with:
        cmd: install
        dir: ${{ inputs.module_path }}

    - name: Build the module
      uses: borales/actions-yarn@v5
      with:
        cmd: build
        dir: ${{ inputs.module_path }}

    - name: Rename build file if necessary and move to /target
      shell: bash
      run: |
        # We move the .tgz to /target to ease CI manipulation inherited from maven structure
        cd ${{ inputs.module_path }}
        if [ -e dist/package.tgz ]; then
          # Rename and move the tgz to target/
          mkdir -p target
          mv dist/package.tgz target/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz
          # TODO: Once all modules are using the new structure, we can remove the lines below
        elif [ -e dist/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz ]; then
          mkdir -p target
          mv dist/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz target/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz
        else
          # Fallback to the old behaviour
          if [ ! -e ${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz ]; then
            mv ${{ env.MODULE_NAME }}-v${{ env.MODULE_OLD_VERSION }}.tgz ${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz
          fi
          mkdir target
          mv ${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz target/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz
        fi
    - name: Archive build artifacts
      if: ${{ inputs.archive_artifacts == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.github_artifact_name }}
        path: |
          ${{ inputs.module_path }}**/target/*.tgz
          ${{ inputs.module_path }}**/bom/*
        retention-days: ${{ inputs.github_artifact_retention }}