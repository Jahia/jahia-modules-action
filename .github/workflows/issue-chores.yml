# This workflow performs various tasks for cleanup, triage, ... on an individual GitHub Issue
# It should be called based on issue events
name: Issue Chores

on:
  workflow_call:

jobs:
  projects:
    name: Projects
    runs-on: ubuntu-latest
    steps:
      # Issue type is not available by default, this makes it available for if conditions
      - name: Get Issue type
        uses: actions/github-script@v7
        id: get-issue-type
        with:
          script: if (context.payload.issue.type !== undefined) {return context.payload.issue.type.name}
          result-encoding: string

      # Using an official action from GitHub to attach issues to projects
      #Â https://github.com/marketplace/actions/add-to-github-projects

      - name: Attach needs-triage to the Bugs Triage project
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/Jahia/projects/13
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: need-triage

      - name: Attach customers to the Customers project
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/Jahia/projects/24
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: customer

      # Add all tickets of Type "Epic" and label "Area:" to the global roadmap project
      - name: Attach all Epics to the Roadmap - Global project
        uses: actions/add-to-project@v1.0.2
        if: ${{ steps.get-issue-type.outputs.result == 'Epic' }}
        with:
          project-url: https://github.com/orgs/Jahia/projects/18
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: Area:Product, Area:Delivery, Area:Tech, Area:QA, Area:Security
          label-operator: OR

      - name: Attach all tickets with label Area:QA to the QA Roadmap Project
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/Jahia/projects/21
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: Area:QA

      - name: Attach all tickets with label Area:Tech to the Tech Roadmap Project
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/Jahia/projects/23
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: Area:Tech

      - name: Attach all tickets with label Area:Delivery to the Delivery Roadmap Project
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/Jahia/projects/12
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: Area:Delivery

  security:
    name: Security
    runs-on: ubuntu-latest
    needs: projects
    steps:
      - name: Attach all tickets with label Area:Security and incident to the Security Roadmap Project
        uses: actions/add-to-project@v1.0.2
        id: new-security-incident
        with:
          project-url: https://github.com/orgs/Jahia/projects/22
          github-token: ${{ secrets.GH_JAHIACI_ISSUES_CHORES }}
          labeled: Area:Security, incident
          label-operator: AND

      - name: Check if issue has already a Jira ticket field value
        env:
          GH_TOKEN: ${{ secrets.GH_ISSUES_PRS_CHORES }}
        run: |
          gh api graphql -f query='
            query($custom_field_name: String!) {
              node (id: context.payload.issue.node_id) {
                ... on Issue {
                  title
                  projectItems(first: 10) {
                    nodes {
                      fieldValueByName(name: $custom_field_name) {
                        ... on ProjectV2ItemFieldTextValue {
                          text
                        }
                      }
                    }
                  }
                }
              }
            }' -f custom_field_name="Jira ticket ID" > project_data.json
          echo 'JIRA_TICKET_FIELD_VALUE='$(jq '.data.node.projectItems.nodes[] | .text' project_data.json) >> $GITHUB_ENV

      - name: Create a Security issue in the Support Jira
        uses: bryannice/gitactions-jira-issue-creation@1.2.1
        if: ${{ env.JIRA_TICKET_FIELD_VALUE == '' }}
        id: new-security-jira-ticket
        env:
          JIRA_ACCOUNT_URL: https://jira.jahia.org
          JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}
          JIRA_ISSUE_DESCRIPTION: context.payload.issue.body
          JIRA_ISSUE_SUMMARY: context.payload.issue.title (${{ steps.new-security-incident.outputs.itemId }})
          JIRA_ISSUE_TYPE: Bug
          #JIRA_ISSUE_TYPE: Vulnerability
          JIRA_PROJECT: SECBACKLOG
          JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}

      - name: Get Security project data
        if: ${{ env.JIRA_TICKET_FIELD_VALUE == '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          ORGANIZATION: Jahia
          PROJECT_NUMBER: 22
        run: |
          gh api graphql -f query='
            query($org: String!, $number: Int!) {
              organization(login: $org){
                projectV2(number: $number) {
                  id
                  fields(first:20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' -f org=$ORGANIZATION -F number=$PROJECT_NUMBER > project_data.json
          echo 'JIRA_TICKET_FIELD_ID='$(jq '.data.organization.projectV2.fields.nodes[] | select(.name== "Jira ticket ID") | .id' project_data.json) >> $GITHUB_ENV

      - name: Set security field on Github issue
        if: ${{ env.JIRA_TICKET_FIELD_VALUE == '' && steps.new-security-incident.outputs.itemId != '' && steps.new-security-jira-ticket.outputs.jira_issue_url != '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_ISSUES_PRS_CHORES }}
        run: |
          gh api graphql -f query='
            mutation (
              $project: ID!
              $item: ID!
              $field: ID!
              $field_value: String!
            ) {
              set_field_value: updateProjectV2ItemFieldValue(input: {
                projectId: $project
                itemId: $item
                fieldId: $field
                value: {
                  singleSelectOptionId: $field_value
                  }
              }) {
                projectV2Item {
                  id
                  }
              }
            }' -f project=${{ env.PROJECT_NUMBER }} -f item=${{ steps.new-security-incident.outputs.itemId }} -f field=${{ env.JIRA_TICKET_FIELD_ID }} -f field_value="${{ steps.new-security-jira-ticket.outputs.jira_issue_url }}" --silent

      # TODO: prevent duplicate in GH
      - name: Attach all tickets with label Area:Security to the Security Roadmap Project
        uses: actions/add-to-project@v1.0.2
        with:
          project-url: https://github.com/orgs/Jahia/projects/22
          github-token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          labeled: Area:Security

  transfer:
    name: Transfer
    runs-on: ubuntu-latest
    needs: security
    steps:
      # Transfer issues with label "jahia-only" back to jahia-private
      - name: Transfer Issue & Create Stub
        uses: lando/transfer-issue-action@v2
        with:
          token: ${{ secrets.GH_JAHIACI_ISSUES_CHORES }}        
          router: jahia-only:jahia-private      
      - name: Update Transferred Issue
        uses: actions/github-script@v5
        if: steps.transfer-issue.outputs.new_issue_number != ''
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: `${{ steps.transfer-issue.outputs.new_issue_number}}`,
              owner: context.repo.owner,
              repo: `${{ steps.transfer-issue.outputs.destinatiom_repo }}`,
              body: `@${ context.payload.issue.user.login } your issues was moved back to jahia/jahia-private since it contained the jahia-only label!`
            });

      # Transfer issues between repositories of the Jahia org
      # Note: Pending review/merge of this PR: https://github.com/lando/transfer-issue-action/pull/97
      # Will update once PR is merged.
      - name: Transfer Issue & Create Stub
        uses: Fgerthoffert/transfer-issue-action@v1.0.0
        with:
          token: ${{ secrets.GH_ISSUES_PRS_CHORES }}        
          router: "transfer:"
          create_labels_if_missing: true
          allow_private_public_transfer: true
          enable_custom_label_routing: true

  links:
    name: Links
    runs-on: ubuntu-latest
    needs: transfer
    steps:
      # Create links in Jira to GitHub Issues
      # We still need to create a Jira User and update the server_host
      - name: Create links to GitHub in Jira issues
        uses: Fgerthoffert/actions-create-jira-link@v1.0.0
        with:
          token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          jira_server_host: jira.jahia.org
          jira_server_username: ${{ secrets.JIRA_USERNAME }}
          jira_server_password: ${{ secrets.JIRA_PASSWORD }}
          github_project_field: "Support tickets" 

      - name: Create links to GitHub in Jira issues
        uses: Fgerthoffert/actions-create-jira-link@v1.0.0
        with:
          token: ${{ secrets.GH_ISSUES_PRS_CHORES }}
          jira_server_host: jira.jahia.org
          jira_server_username: ${{ secrets.JIRA_USERNAME }}
          jira_server_password: ${{ secrets.JIRA_PASSWORD }}
          github_project_field: "Jira ticket ID" 
