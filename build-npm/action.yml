name: Build NPM
descripion: Build a npm-module

inputs:
  github_artifact_retention:
    description: 'Time during which artifact are kept in Github infrastructure'
    default: '2'
  module_path:
    description: 'Path to the module folder (if not ./ precise path from the github_workspace)'
    required: false
    default: ./
  tests_module_path:
    description: 'Path to a folder in the repository containing a tests module to be built'
    required: false
    default: 'tests/jahia-module/'
  node_version:
    description: 'Version of node to install on the host'
    required: false
    default: 'lts/*'

runs:
  using: 'composite'
  steps:
    - name: Build package
      uses: jahia/jahia-modules-action/build-step-npm@npm-test-module
      with:
        module_path: ${{ inputs.module_path }}
        node-version: ${{ inputs.node_version }}
        github_artifact_retention: ${{ inputs.github_artifact_retention }}

    - name: Check if test module is present (NPM)
      id: check_test_module_npm
      uses: andstor/file-existence-action@v2
      with:
        files: "${{ inputs.tests_module_path }}package.json"

    - name: Build tests package (NPM)
      if: ${{ steps.check_test_module_npm.outputs.files_exists == 'true' }}
      uses: jahia/jahia-modules-action/build-step-npm@npm-test-module
      with:
        module_path: ${{ inputs.tests_module_path }}
        node-version: ${{ inputs.node_version }}
        github_artifact_retention: ${{ inputs.github_artifact_retention }}

    - name: Keep session opened if /tmp/debug file is present
      shell: bash
      if: always()
      run: |
        echo "::group::Keep session opened if /tmp/debug file is present"
        WAIT_DURATION=0
        while [[ -e /tmp/debug ]]; do
          echo "Debug file present - $(( ++ WAIT_DURATION ))s - waiting for file removal..."
          if [ $WAIT_DURATION -gt ${{ inputs.debug_session_timeout }} ]; then
            echo "Reached timeout of: ${{ inputs.debug_session_timeout }}"
            echo "Exiting the loop"
            break
          fi
          sleep 1;
        done
        echo "::endgroup::"