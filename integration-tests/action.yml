name: 'Integration tests'
description: 'Runs Jahia integration tests on an Ubuntu server'
author: 'Jahia'

# To review: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
# Please see: https://github.com/actions/toolkit/blob/master/README.md#packages for available packages
inputs:
  milliseconds: # change this
    required: true
    description: 'input description here'
    default: 'default value if applicable'
  module_id:
    description: 'Module ID'
    required: true
  primary_release_branch:
    description: 'Primary release branch'
    required: false
    default: 'main'
  nexus_username:
    description: 'Nexus Username'
    required: true
  nexus_password:
    description: 'Nexus Password'
    required: true
  docker_username:
    description: 'Docker login username'
    required: true
  docker_password:
    description: 'Docker login password'
    required: true
  docker_compose_file:
    description: 'Filename for docker-compose yaml file'
    required: false
    default: 'docker-compose.yml'
  tests_path:
    description: 'Folder containing the docker-compose.yml'
    required: false
    default: 'tests/'
  tests_profile:
    description: 'Profile to be used for the tests, this becomes an environment variable usable by the tests'
    required: false
    default: ''
  timeout_minutes:
    description: 'The maximum number of minutes to run the tests before killing the process.'
    required: false
    default: '60'    
  tests_manifest:
    description: 'Manifest contraining the provisioning script'
    required: true
  jahia_image:
    description: 'Full name of a Jahia image (org/repo:tag)'
    required: false
    default: 'jahia/jahia-ee-dev:8-SNAPSHOT'
  jahia_superuser_password:
    description: 'Jahia root password'
    required: false
    default: 'root1234'
  jahia_cluster_enabled:
    description: 'Run Jahia in cluster mode'
    required: false
    default: 'false'
  tests_image:
    description: 'Full name of the Tests image (org/repo:tag)'
    required: false
    default: 'module-tests'
  tests_container_name:
    description: 'Name of the tests container in the docker-compose file'
    required: false
    default: 'cypress'
  tests_container_branch:
    description: 'Branch containing the tests (if different from current)'
    required: false
    default: ''
  tests_report_name:
    description: 'Name of the check report'
    required: false
    default: 'JUnit Test Report'
  tests_report_path:
    description: 'Path to the report folder/file inside the tests folder to be used by jahia-reporter for processing test results'
    required: false
    default: 'artifacts/results/xml_reports'
  tests_report_type:
    description: 'Type of report to be used by jahia-reporter for processing test results'
    required: false
    default: 'xml'
  jahia_license:
    description: 'Base64 encoded Jahia license'
    required: false
    default: ''
  jcustomer_image:
    description: 'Full name a JCustomer image (org/repo:tag)'
    required: false
    default: ''
  elasticsearch_image:
    description: 'Full name of an Elasticsearch image (org/repo:tag)'
    required: false
    default: ''
  should_skip_artifacts:
    description: 'Should build artifacts be copied in the test container ?'
    required: false
    default: 'false'
  should_skip_testrail:
    description: 'Should the submission to Testrail be skipped ?'
    required: false
    default: 'true'
  should_skip_notifications:
    description: 'Should slack notifications be skipped ?'
    required: false
    default: 'true'
  should_skip_pagerduty:
    description: 'Should pagerduty notifications be skipped ?'
    required: false
    default: 'false'    
  slack_channel_id_notifications:
    description: 'Channel id to be used for failure notifications'
    required: false
    default: ''
  slack_channel_id_notifications_all:
    description: 'Channel id to be used for all notifications (failure and success)'
    required: false
    default: ''
  slack_client_token:
    description: 'The slack token used to post the messages'
    required: false
    default: ''
  slack_webhook_notifications:
    description: 'Webhook to be used for failure notifications'
    required: false
    default: ''
  slack_webhook_notifications_all:
    description: 'Webhook to be used for all notifications (failure and success)'
    required: false
    default: ''
  should_use_build_artifacts:
    description: 'Should the job attempt to download previously built artifacts'
    required: false
    default: 'true'
  build_artifacts:
    description: 'Name of the artifacts to download from previous job'
    required: false
    default: 'build-artifacts'
  build_artifacts_tests:
    description: 'Name of the artifacts to download from previous job (tests modules)'
    required: false
    default: 'build-artifacts-tests'    
  should_skip_zencrepes:
    description: 'Should zencrepes notifications be skipped ?'
    required: false
    default: 'false'
  should_build_testsimage:
    description: 'Should the orb attend to build the test image ?'
    required: false
    default: 'true'
  zencrepes_secret:
    description: 'ZenCrepes Webhook secret'
    required: false
    default: ''
  incident_pagerduty_api_key:
    description: 'Pageduty API key to create incidents'
    required: false
    default: ''
  incident_pagerduty_reporter_email:
    description: 'Pageduty Reporter email to create incident. That email must correspond to a valid user in the PagerDuty tenant'
    required: false
    default: ''
  incident_pagerduty_reporter_id:
    description: 'Pageduty Reporter id to create incident. This user will first be assigned to the ticket when --pdTwoStepsAssign is provided'
    required: false
    default: ''
  incident_google_spreadsheet_id:
    description: 'Google Spreadsheet ID of the spreadsheet containing the incident mapping'
    required: false
    default: ''
  incident_google_client_email:
    description: 'Google Client email to allow access to Google API'
    required: false
    default: ''
  incident_google_api_key_base64:
    description: 'Google base64 encoded private key to allow access to Google API'
    required: false
    default: ''
  incident_service:
    description: 'Service subject to the incident. If empty, will default to the value of module_id'
    required: false
    default: ''
  testrail_project:
    description: 'Testrail Project to send data to'
    required: false
    default: 'Default'
  testrail_milestone:
    description: 'Milestone to be used when submitting the results to Testrail'
    required: false
    default: 'Default'
  testrail_username:
    description: 'Testrail Username'
    required: false
    default: ''
  testrail_password:
    description: 'Testrail Password'
    required: false
    default: ''
  testrail_platformdata:
    description: 'Name of the file containing platform data to be sent to testrail as tests metadata'
    required: false
    default: 'installed-jahia-modules.json'    
  ci_startup_script:
    description: 'Startup script to use in-lieu of docker-compose up'
    required: false
    default: 'ci.startup.sh'
  ci_build_script:
    description: 'Build script to use in-lieu of docker build'
    required: false
    default: 'ci.build.sh'
  ci_postrun_script:
    description: 'Script to run prior to saving the artifacts'
    required: false
    default: 'ci.postrun.sh'
  node_version:
    description: 'Version of node to install on the host'
    required: false
    default: 'lts/*'
  debug_session_timeout:
    description: 'In seconds, timeout in seconds before terminating the session'
    required: false
    default: '7200'
  github_artifact_enable:
    description: 'Enable saving of artifacts on GitHub infra'
    required: false
    default: 'true'
  github_artifact_name:
    description: 'Name for the artifacts saved at the end of the run'
    required: false
    default: 'integration-tests-results'
  github_artifact_retention:
    description: 'Time during which artifact are kept in Github infrastructure'
    required: false
    default: '2'
  jahia_artifact_enable:
    description: 'Enable saving of artifacts on Jahia infra'
    required: false
    default: 'true'
  jahia_artifact_name:
    description: 'Name for the artifacts saved at the end of the run'
    required: false
    default: 'integration-tests-results'
  jahia_artifact_retention:
    description: 'Time during which artifact are kept in Jahia infrastructure'
    required: false
    default: '30'
  bastion_ssh_private_key:
    description: 'SSH Private Key used to upload artifacts to Jahia servers'
    required: false
    default: ''
  logging_mode:
    description: 'Set the desired logging behavior (full, silent, partial)'
    required: false
    default: 'full'
runs:
  using: 'node20'
  main: 'dist/index.js'
