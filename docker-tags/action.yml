# Action created from: https://github.com/Jahia/docker-tags-orb
name: docker-tags

inputs:
  version:
    default: "8.0.2.0"
    description: "Version string or path to version file to run the check towards"
  org:
    default: "jahia"
    description: "Docker registry (i.e. Docker Hub) organization"
  repo:
    default: "jahia-dev-ee"
    description: "Docker registry (i.e. Docker Hub) repository"
  docker_username:
    default: ""
    description: "Docker registry (i.e. Docker Hub) username. Requires read/write access"
    required: true
  docker_password:
    default: ""
    description: "Docker registry (i.e. Docker Hub) password. Requires read/write access"
    required: true
  dry-run:
    default: true
    description: "Dry Run: Does not push changes if true"

runs:
  using: "composite"
  steps:
    - name: Docker login
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: Handle version parameter (file or version string)
      shell: bash
      run: |
        echo "::group::Setup environment variables from inputs"
        if [[ -e ${{ inputs.version }} ]]; then
          export PARAM_VERSION=$(cat ${{ inputs.version }})
        else
          export PARAM_VERSION=${{ inputs.version }}
        fi
        PARAM_VERSION_MAJOR=$(echo "${PARAM_VERSION}" | awk -F . '{print $1}' )
        PARAM_VERSION_MINOR=$(echo "${PARAM_VERSION}" | awk -F . '{print $2}' )
        PARAM_VERSION_HF=$(echo "${PARAM_VERSION}" | awk -F . '{print $3}' )
        PARAM_VERSION_CLASSIFIER=$(echo "${PARAM_VERSION}" | awk -F - '{print $2}' )
        if [ "$PARAM_VERSION_CLASSIFIER" != "" ]; then
            PARAM_VERSION_CLASSIFIER_SUFFIX=$(echo "${PARAM_VERSION}" | awk -F - '{print $3}' )
            PARAM_VERSION_CLASSIFIER='-'$PARAM_VERSION_CLASSIFIER
        fi

        echo "PARAM_VERSION=${PARAM_VERSION}" >> $GITHUB_ENV        
        echo "PARAM_VERSION_MAJOR=${PARAM_VERSION_MAJOR}" >> $GITHUB_ENV        
        echo "PARAM_VERSION_MINOR=${PARAM_VERSION_MINOR}" >> $GITHUB_ENV        
        echo "PARAM_VERSION_HF=${PARAM_VERSION_HF}" >> $GITHUB_ENV        
        echo "PARAM_VERSION_CLASSIFIER=${PARAM_VERSION_CLASSIFIER}" >> $GITHUB_ENV        
        echo "PARAM_VERSION_CLASSIFIER_SUFFIX=${PARAM_VERSION_CLASSIFIER_SUFFIX}" >> $GITHUB_ENV        
        echo "PARAM_ORG=${{ inputs.org }}" >> $GITHUB_ENV
        echo "PARAM_REPO=${{ inputs.repo }}" >> $GITHUB_ENV
        echo "PARAM_DRYRUN=${{ inputs.dry-run }}" >> $GITHUB_ENV

        echo "AUTH_DOMAIN=auth.docker.io" >> $GITHUB_ENV
        echo "AUTH_SERVICE=registry.docker.io" >> $GITHUB_ENV
        echo "AUTH_SCOPE=repository:${{ inputs.org }}/${{ inputs.repo }}:pull" >> $GITHUB_ENV
        echo "AUTH_OFFLINE_TOKEN=1" >> $GITHUB_ENV
        echo "AUTH_CLIENT_ID=shell" >> $GITHUB_ENV

        echo "API_DOMAIN=registry-1.docker.io" >> $GITHUB_ENV
        echo "::endgroup::"

    - name: Verifying version in environment variable
      shell: bash
      run: |
        echo "::group::Display environment variables"
        echo docker_username=${{ inputs.docker_username }}
        
        echo PARAM_VERSION=${{ env.PARAM_VERSION }}
        echo PARAM_VERSION_MAJOR=${{ env.PARAM_VERSION_MAJOR }}
        echo PARAM_VERSION_MINOR=${{ env.PARAM_VERSION_MINOR }}
        echo PARAM_VERSION_HF=${{ env.PARAM_VERSION_HF }}
        echo PARAM_VERSION_CLASSIFIER=${{ env.PARAM_VERSION_CLASSIFIER }}
        echo PARAM_ORG=${{ env.PARAM_ORG }}
        echo PARAM_REPO=${{ env.PARAM_REPO }}
        echo PARAM_DRYRUN=${{ env.PARAM_DRYRUN }}

        echo AUTH_DOMAIN=${{ env.AUTH_DOMAIN }}
        echo AUTH_SERVICE=${{ env.AUTH_SERVICE }}
        echo AUTH_SCOPE=${{ env.AUTH_SCOPE }}
        echo AUTH_OFFLINE_TOKEN=${{ env.AUTH_OFFLINE_TOKEN }}
        echo AUTH_CLIENT_ID=${{ env.AUTH_CLIENT_ID }}
        echo API_DOMAIN=${{ env.API_DOMAIN }}
        echo "::endgroup::"      

    - name: Setup Docker Hub token
      shell: bash
      env:
        DOCKER_PASSWORD: ${{ inputs.docker_password }}
        DOCKER_USERNAME: ${{ inputs.docker_username }}
      run: |
        echo "$(date +'%d %B %Y - %k:%M') - GetToken: Fetching Token from container registry: ${{ env.AUTH_SERVICE }}"
        AUTHORIZATION_HEADER=$(echo -n $DOCKER_USERNAME:$DOCKER_PASSWORD | base64)
        TOKEN=$(curl -s -X GET -H "Authorization: Basic ${AUTHORIZATION_HEADER}" "https://${{ env.AUTH_DOMAIN }}/token?service=${{ env.AUTH_SERVICE }}&scope=${{ env.AUTH_SCOPE }}&offline_token=${{ env.AUTH_OFFLINE_TOKEN }}&client_id=${{ env.AUTH_CLIENT_ID }}" | jq -r '.token')
        echo "TOKEN=${TOKEN}" >> $GITHUB_ENV 
        echo "Token portion: ${TOKEN:0:10}"        
        echo "$(date +'%d %B %Y - %k:%M') - GetToken: Fetch complete"      

    - name: Generate Docker tags
      shell: bash
      run: |
        echo "$(date +'%d %B %Y - %k:%M') - Starting the tagging script"
        
        # Only tagging images following format 1.2.3.4 or 1.2.3.4-SNAPSHOT
        # Other versions (such as 1.2.3.4-SNAPSHOT-branch) are silently ignored
        if [[ "${{ env.PARAM_VERSION_CLASSIFIER_SUFFIX }}" != "" ]]; then
          echo "$(date +'%d %B %Y - %k:%M') - Version ${{ env.PARAM_VERSION }} appears to be built from a branch, its suffix is: ${{ env.PARAM_VERSION_CLASSIFIER_SUFFIX }}"
          echo "$(date +'%d %B %Y - %k:%M') - The action is only meant at tagging release or snapshot versions (1.2.3.4 or 1.2.3.4-SNAPSHOT)"
          echo "$(date +'%d %B %Y - %k:%M') - The action will SILENTLY EXIT"
          exit 0
        fi

        echo "$(date +'%d %B %Y - %k:%M') - GetVersions: Fetching container versions from container registry: ${{ env.AUTH_SERVICE }}"
        VERSIONS=$(curl -s -H "Authorization: Bearer ${{ env.TOKEN }}" https://${{ env.API_DOMAIN }}/v2/"${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}"/tags/list | jq -r '.tags[]' | grep -E "^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+${{ env.PARAM_VERSION_CLASSIFIER }}$")
        echo "$(date +'%d %B %Y - %k:%M') - GetVersions: Fetch complete"

        REGISTRY_VERSIONS=$(echo "$VERSIONS" | awk -vORS=, '{ print $1 }' | sed 's/,$/\n/')   
        echo "$(date +'%d %B %Y - %k:%M') - The following tags exists in ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}: ${REGISTRY_VERSIONS}"

        if ! (echo "$VERSIONS" | grep "${{ env.PARAM_VERSION }}"); then   
            echo "$(date +'%d %B %Y - %k:%M') - Version ${{ env.PARAM_VERSION }} does not exist in the repository"
            echo "$(date +'%d %B %Y - %k:%M') - The action is meant at tagging existing images"
            echo "$(date +'%d %B %Y - %k:%M') - The action will TERMINATE"
            exit 1
        fi

        if ! (echo "$VERSIONS" | grep "${{ env.PARAM_VERSION }}"); then
          echo "$PARAM_VERSION" not found yet, adding it
          VERSIONS=$(echo -e "$VERSIONS\n${{ env.PARAM_VERSION }}")
        fi

        VERSIONS=$(echo "$VERSIONS" | sort --version-sort)

        LATEST=$(echo "$VERSIONS" | tail -1)
        MATCHING1=$(echo "$VERSIONS" | grep -E "^${{ env.PARAM_VERSION_MAJOR }}\." | tail -1)
        MATCHING2=$(echo "$VERSIONS" | grep -E "^${{ env.PARAM_VERSION_MAJOR }}\.${{ env.PARAM_VERSION_MINOR}}\." | tail -1)
        MATCHING3=$(echo "$VERSIONS" | grep -E "^${{ env.PARAM_VERSION_MAJOR }}\.${{ env.PARAM_VERSION_MINOR}}\.${{ env.PARAM_VERSION_HF}}\." | tail -1)

        if [[ "${{ env.PARAM_DRYRUN }}" == "false" ]]; then
            echo "$(date +'%d %B %Y - %k:%M') - Pulling docker image prior to tagging"
            docker pull "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION }}"
        fi

        if [ "$LATEST" == "${{ env.PARAM_VERSION }}" ]; then
            echo "$(date +'%d %B %Y - %k:%M') - Tag: latest${{ env.PARAM_VERSION_CLASSIFIER}} should be an alias of ${LATEST}, tag update is required"
            if [[ "${{ env.PARAM_DRYRUN }}" == "false" ]]; then
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:latest${{ env.PARAM_VERSION_CLASSIFIER}}"
                docker tag "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION }}" "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":latest"${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:latest${{ env.PARAM_VERSION_CLASSIFIER}}"        
                docker push "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":latest"${{ env.PARAM_VERSION_CLASSIFIER}}"
            else
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:latest${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:latest${{ env.PARAM_VERSION_CLASSIFIER}}"
            fi
        else
            echo "$(date +'%d %B %Y - %k:%M') - Tag: latest is an alias of ${LATEST}, unchanged"
        fi

        if [ "$MATCHING1" == "${{ env.PARAM_VERSION }}" ]; then
            echo "$(date +'%d %B %Y - %k:%M') - Tag: ${{ env.PARAM_VERSION_MAJOR }}${{ env.PARAM_VERSION_CLASSIFIER}} should be an alias of ${MATCHING1}, tag update is required"
            if [[ "${{ env.PARAM_DRYRUN }}" == "false" ]]; then
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}${{ env.PARAM_VERSION_CLASSIFIER}}"
                docker tag "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION }}" "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION_MAJOR }}""${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}${{ env.PARAM_VERSION_CLASSIFIER}}"        
                docker push "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION_MAJOR }}""${{ env.PARAM_VERSION_CLASSIFIER}}"
            else
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}${{ env.PARAM_VERSION_CLASSIFIER}}"
            fi      
        else
            echo "$(date +'%d %B %Y - %k:%M') - Tag: ${{ env.PARAM_VERSION_MAJOR }}${{ env.PARAM_VERSION_CLASSIFIER}} is an alias of ${MATCHING1}, unchanged"
        fi

        if [ "$MATCHING2" == "${{ env.PARAM_VERSION }}" ]; then
            echo "$(date +'%d %B %Y - %k:%M') - Tag: ${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}${{ env.PARAM_VERSION_CLASSIFIER}} should be  an alias of ${MATCHING2}, tag update is required"
            if [[ "${{ env.PARAM_DRYRUN }}" == "false" ]]; then
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}${{ env.PARAM_VERSION_CLASSIFIER}}"
                docker tag "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION }}" "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION_MAJOR }}"."${{ env.PARAM_VERSION_MINOR}}""${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}${{ env.PARAM_VERSION_CLASSIFIER}}"        
                docker push "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION_MAJOR }}"."${{ env.PARAM_VERSION_MINOR}}""${{ env.PARAM_VERSION_CLASSIFIER}}"
            else
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}${{ env.PARAM_VERSION_CLASSIFIER}}"
            fi          
        else
            echo "$(date +'%d %B %Y - %k:%M') - Tag: ${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}${{ env.PARAM_VERSION_CLASSIFIER}} is an alias of ${MATCHING2}, unchanged"
        fi

        if [ "$MATCHING3" == "${{ env.PARAM_VERSION }}" ]; then
            echo "$(date +'%d %B %Y - %k:%M') - Tag: ${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}.${{ env.PARAM_VERSION_HF}}${{ env.PARAM_VERSION_CLASSIFIER}} should be  an alias of ${MATCHING3}, tag update is required"
            if [[ "${{ env.PARAM_DRYRUN }}" == "false" ]]; then
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}.${{ env.PARAM_VERSION_HF}}${{ env.PARAM_VERSION_CLASSIFIER}}"
                docker tag "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION }}" "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION_MAJOR }}"."${{ env.PARAM_VERSION_MINOR}}"."${{ env.PARAM_VERSION_HF}}""${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - RUNNING: docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}.${{ env.PARAM_VERSION_HF}}${{ env.PARAM_VERSION_CLASSIFIER}}"        
                docker push "${{ env.PARAM_ORG }}"/"${{ env.PARAM_REPO }}":"${{ env.PARAM_VERSION_MAJOR }}"."${{ env.PARAM_VERSION_MINOR}}"."${{ env.PARAM_VERSION_HF}}""${{ env.PARAM_VERSION_CLASSIFIER}}"
            else
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker tag ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION }} ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}.${{ env.PARAM_VERSION_HF}}${{ env.PARAM_VERSION_CLASSIFIER}}"
                echo "$(date +'%d %B %Y - %k:%M') - DRY-RUN (command not executed): docker push ${{ env.PARAM_ORG }}/${{ env.PARAM_REPO }}:${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}.${{ env.PARAM_VERSION_HF}}${{ env.PARAM_VERSION_CLASSIFIER}}"
            fi           
        else
            echo "$(date +'%d %B %Y - %k:%M') - Tag: ${{ env.PARAM_VERSION_MAJOR }}.${{ env.PARAM_VERSION_MINOR}}.${{ env.PARAM_VERSION_HF}}${{ env.PARAM_VERSION_CLASSIFIER}} is an alias of ${MATCHING3}, unchanged"
        fi
