name: Publish
description: Publish a Jahia module to NEXUS

inputs:
  mvn_settings_filepath:
    description: Filepath to the settings.xml file
    default: '.github/maven.settings.xml'
    required: false
  nexus_username:
    description: 'Nexus Username'
    required: true
  nexus_password:
    description: 'Nexus Password'
    required: true
  tests_module_path:
    description: 'Path to a folder in the repository containing a tests module to be built'
    required: false
    default: 'tests/jahia-module/'  

runs:
  using: "composite"
  steps:
    - name: Set environment variables from parameters
      shell: bash
      run: |
        echo "NEXUS_USERNAME=${{ inputs.nexus_username }}" >> $GITHUB_ENV
        echo "NEXUS_PASSWORD=${{ inputs.nexus_password }}" >> $GITHUB_ENV

    # This step save the maven cache between runs
    # More details can be found here: https://docs.github.com/en/actions/advanced-guides/caching-dependencies-to-speed-up-workflows
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build package
      shell: bash
      run: mvn -B -s ${{ inputs.mvn_settings_filepath }} clean deploy -Dmaven.resolver.transport=wagon | tee mvnLogs.txt

    - name: Check if test module is present
      id: check_test_module
      uses: andstor/file-existence-action@v2
      with:
        files: "${{ inputs.tests_module_path }}pom.xml"

    - name: Publish tests package (if present)
      shell: bash
      if: steps.check_test_module.outputs.files_exists == 'true'
      run: |
        ROOT_PATH=$(pwd)
        cd ${{ inputs.tests_module_path }}
        mvn -B -U -ntp -s $ROOT_PATH/${{ inputs.mvn_settings_filepath }} clean deploy -Dmaven.resolver.transport=wagon 

    - name: Direct link location of the Artifact
      shell: bash
      run: |
        EXTRACTED_NEXUS_ARTIFACT_URL=`grep -e "Uploaded.*\.jar" mvnLogs.txt | grep -v sources | sed -e 's/.*\(https.*.jar\).*/\1/g'` 
        echo "::notice title=Snapshot module location::Artifact has been uploaded to: $EXTRACTED_NEXUS_ARTIFACT_URL"
