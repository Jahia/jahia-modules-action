name: publish NPM

inputs:
  mvn_settings_filepath:
    description: Filepath to the settings.xml file
    default: '.github/maven.settings.xml'
    required: false
  nexus_username:
    description: 'Nexus Username'
    required: true
  nexus_password:
    description: 'Nexus password'
    required: true
  node_version:
    description: 'Version of node to install on the host'
    required: false
    default: 'lts/*'
  module_path:
    description: 'Path to the module folder (if not ./ precise path from the github_workspace)'
    required: false
    default: ./
  tests_module_path:
    description: 'Path to a folder in the repository containing a tests module to be built (Only NPM test module supported)'
    required: false
    default: 'tests/jahia-module/'

runs:
  using: 'composite'
  steps:
    - name: Set environment variables from parameters
      shell: bash
      run: |
        # Get informations from package.json to replace the ones that are in pom.xml in classic modules
        cd ${{ inputs.module_path }}
        echo "NEXUS_USERNAME=${{ inputs.nexus_username }}" >> $GITHUB_ENV
        echo "NEXUS_PASSWORD=${{ inputs.nexus_password }}" >> $GITHUB_ENV
        echo "REPOSITORY_ID=$(jq '.jahia.maven.distributionManagement.snapshotRepository.id' package.json | cut -d\" -f2)" >> $GITHUB_ENV
        echo "REPOSITORY_URL=$(jq '.jahia.maven.distributionManagement.snapshotRepository.url' package.json | cut -d\" -f2)" >> $GITHUB_ENV
        echo "GROUP_ID=$(jq '.jahia.maven.groupId' package.json | cut -d\" -f2)" >> $GITHUB_ENV

    - name: Build package
      uses: jahia/jahia-modules-action/build-step-npm@v2
      with:
        module_path: ${{ inputs.module_path }}
        node_version: ${{ inputs.node_version }}
        archive_artifacts: 'false'
        github_artifact_retention: ${{ inputs.github_artifact_retention }}

    - name: Publish to maven
      shell: bash
      run: |
        # Run mvn deploy with parameters got from the package.json
        mvn -s ${{ inputs.mvn_settings_filepath }} deploy:deploy-file -Dfile=${{ inputs.module_path }}/target/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz -DgroupId=${{ env.GROUP_ID }} -DartifactId=${{ env.MODULE_NAME }} -Dversion=${{ env.MODULE_VERSION }} -Dpackaging=tgz -Durl=${{ env.REPOSITORY_URL }} -DrepositoryId=${{ env.REPOSITORY_ID }}

    - name: Check if test module is present (Only NPM test module is supported)
      id: check_test_module_npm
      uses: andstor/file-existence-action@v2
      with:
        files: "${{ inputs.module_path }}${{ inputs.tests_module_path }}package.json"

    - name: Build tests package
      if: ${{ steps.check_test_module_npm.outputs.files_exists == 'true' }}
      uses: jahia/jahia-modules-action/build-step-npm@v2
      with:
        module_path: ${{ inputs.module_path }}${{ inputs.tests_module_path }}
        node_version: ${{ inputs.node_version }}
        github_artifact_retention: ${{ inputs.github_artifact_retention }}

    - name: Publish tests package to maven
      if: ${{ steps.check_test_module_npm.outputs.files_exists == 'true' }}
      shell: bash
      run: |
        # Run mvn deploy with parameters got from the package.json
        mvn -s ${{ inputs.mvn_settings_filepath }} deploy:deploy-file -Dfile=${{ inputs.module_path }}${{ inputs.tests_module_path }}/target/${{ env.MODULE_NAME }}-v${{ env.MODULE_VERSION }}.tgz -DgroupId=${{ env.GROUP_ID }} -DartifactId=${{ env.MODULE_NAME }} -Dversion=${{ env.MODULE_VERSION }} -Dpackaging=tgz -Durl=${{ env.REPOSITORY_URL }} -DrepositoryId=${{ env.REPOSITORY_ID }}