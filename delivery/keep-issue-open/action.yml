name: Keep issue open
description: If an issue in closed but not in the Done column of the project, re-open the issue with a comment

inputs:
  project_prefix:
    description: Prefix of projects to consider
    required: true
  github_token:
    description: 'GitHub personal API token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Re-open an issue if not in the right column
      uses: actions/github-script@v7
      env:
        projectPrefix: ${{ inputs.project_prefix }}
      with:
        github-token: ${{ inputs.github_token }}
        result-encoding: string
        retries: 3
        script: |
          const { projectPrefix } = process.env
          const projectField = 'Status'
          const projectFieldValue = 'Done'
          const githubIssueId = context.payload.issue.node_id
          const githubIssueNode = await github.graphql(`
            query issue($issueId: ID! $projectField: String!) {
              node(id: $issueId) {
                ... on Issue {
                  id
                  state
                  title
                  milestone {
                    id
                    title
                  }
                  projectItems(first:10) {
                    nodes {
                      id
                      project {
                        id                    
                        url
                        title
                      }
                      fieldValueByName(name: $projectField) {
                        ... on ProjectV2ItemFieldTextValue {
                          text
                        }
                      }                      
                    }
                  }                                  
                }
              }
            }
            `,
            { issueId: githubIssueId, projectField: projectField }
          )
          if (githubIssueNode === undefined) {
            core.info(`Unable to find an issue with ID: ${githubIssueId}`)
            return
          }

          const githubIssue = githubIssueNode.node
          core.info(`Issue with ID: ${githubIssueId} has a status of: ${githubIssue.state}`)

